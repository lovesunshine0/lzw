<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cn.course.bill.dao.BillMapper">
  <resultMap id="BaseResultMap" type="com.cn.course.bill.Bill">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="isback" jdbcType="INTEGER" property="isback" />
    <result column="isvalid" jdbcType="INTEGER" property="isvalid" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="createuser" jdbcType="INTEGER" property="createuser" />
    <result column="courseid" jdbcType="INTEGER" property="courseid" />
    <result column="paytype" jdbcType="INTEGER" property="paytype" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="updateuser" jdbcType="INTEGER" property="updateuser" />
    <result column="timestamp" jdbcType="VARCHAR" property="timestamp" />
    <result column="isconsume" jdbcType="INTEGER" property="isconsume" />
    <result column="usertype" jdbcType="INTEGER" property="usertype" />
    <result column="couponid" jdbcType="INTEGER" property="couponid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, userid, name, remark, isback, isvalid, createtime, createuser, courseid, 
    paytype, updatetime, updateuser, timestamp, isconsume, usertype, couponid
  </sql>
  <select id="selectByExample" parameterType="com.cn.course.bill.BillExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bill
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bill
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cn.course.bill.BillExample">
    delete from bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cn.course.bill.Bill">
    insert into bill (id, code, userid, 
      name, remark, isback, 
      isvalid, createtime, createuser, 
      courseid, paytype, updatetime, 
      updateuser, timestamp, isconsume, 
      usertype, couponid)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{isback,jdbcType=INTEGER}, 
      #{isvalid,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{createuser,jdbcType=INTEGER}, 
      #{courseid,jdbcType=INTEGER}, #{paytype,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{updateuser,jdbcType=INTEGER}, #{timestamp,jdbcType=VARCHAR}, #{isconsume,jdbcType=INTEGER}, 
      #{usertype,jdbcType=INTEGER}, #{couponid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.course.bill.Bill">
    insert into bill
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="isback != null">
        isback,
      </if>
      <if test="isvalid != null">
        isvalid,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="createuser != null">
        createuser,
      </if>
      <if test="courseid != null">
        courseid,
      </if>
      <if test="paytype != null">
        paytype,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="updateuser != null">
        updateuser,
      </if>
      <if test="timestamp != null">
        timestamp,
      </if>
      <if test="isconsume != null">
        isconsume,
      </if>
      <if test="usertype != null">
        usertype,
      </if>
      <if test="couponid != null">
        couponid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isback != null">
        #{isback,jdbcType=INTEGER},
      </if>
      <if test="isvalid != null">
        #{isvalid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null">
        #{createuser,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="paytype != null">
        #{paytype,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null">
        #{updateuser,jdbcType=INTEGER},
      </if>
      <if test="timestamp != null">
        #{timestamp,jdbcType=VARCHAR},
      </if>
      <if test="isconsume != null">
        #{isconsume,jdbcType=INTEGER},
      </if>
      <if test="usertype != null">
        #{usertype,jdbcType=INTEGER},
      </if>
      <if test="couponid != null">
        #{couponid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cn.course.bill.BillExample" resultType="java.lang.Long">
    select count(*) from bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bill
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.isback != null">
        isback = #{record.isback,jdbcType=INTEGER},
      </if>
      <if test="record.isvalid != null">
        isvalid = #{record.isvalid,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createuser != null">
        createuser = #{record.createuser,jdbcType=INTEGER},
      </if>
      <if test="record.courseid != null">
        courseid = #{record.courseid,jdbcType=INTEGER},
      </if>
      <if test="record.paytype != null">
        paytype = #{record.paytype,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateuser != null">
        updateuser = #{record.updateuser,jdbcType=INTEGER},
      </if>
      <if test="record.timestamp != null">
        timestamp = #{record.timestamp,jdbcType=VARCHAR},
      </if>
      <if test="record.isconsume != null">
        isconsume = #{record.isconsume,jdbcType=INTEGER},
      </if>
      <if test="record.usertype != null">
        usertype = #{record.usertype,jdbcType=INTEGER},
      </if>
      <if test="record.couponid != null">
        couponid = #{record.couponid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bill
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      isback = #{record.isback,jdbcType=INTEGER},
      isvalid = #{record.isvalid,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      createuser = #{record.createuser,jdbcType=INTEGER},
      courseid = #{record.courseid,jdbcType=INTEGER},
      paytype = #{record.paytype,jdbcType=INTEGER},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      updateuser = #{record.updateuser,jdbcType=INTEGER},
      timestamp = #{record.timestamp,jdbcType=VARCHAR},
      isconsume = #{record.isconsume,jdbcType=INTEGER},
      usertype = #{record.usertype,jdbcType=INTEGER},
      couponid = #{record.couponid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.course.bill.Bill">
    update bill
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isback != null">
        isback = #{isback,jdbcType=INTEGER},
      </if>
      <if test="isvalid != null">
        isvalid = #{isvalid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null">
        createuser = #{createuser,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        courseid = #{courseid,jdbcType=INTEGER},
      </if>
      <if test="paytype != null">
        paytype = #{paytype,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null">
        updateuser = #{updateuser,jdbcType=INTEGER},
      </if>
      <if test="timestamp != null">
        timestamp = #{timestamp,jdbcType=VARCHAR},
      </if>
      <if test="isconsume != null">
        isconsume = #{isconsume,jdbcType=INTEGER},
      </if>
      <if test="usertype != null">
        usertype = #{usertype,jdbcType=INTEGER},
      </if>
      <if test="couponid != null">
        couponid = #{couponid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.course.bill.Bill">
    update bill
    set code = #{code,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      isback = #{isback,jdbcType=INTEGER},
      isvalid = #{isvalid,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      createuser = #{createuser,jdbcType=INTEGER},
      courseid = #{courseid,jdbcType=INTEGER},
      paytype = #{paytype,jdbcType=INTEGER},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      updateuser = #{updateuser,jdbcType=INTEGER},
      timestamp = #{timestamp,jdbcType=VARCHAR},
      isconsume = #{isconsume,jdbcType=INTEGER},
      usertype = #{usertype,jdbcType=INTEGER},
      couponid = #{couponid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.cn.course.bill.Bill">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="isback" jdbcType="INTEGER" property="isback" />
    <result column="isvalid" jdbcType="INTEGER" property="isvalid" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="createuser" jdbcType="INTEGER" property="createuser" />
    <result column="courseid" jdbcType="INTEGER" property="courseid" />
    <result column="paytype" jdbcType="INTEGER" property="paytype" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="updateuser" jdbcType="INTEGER" property="updateuser" />
    <result column="timestamp" jdbcType="VARCHAR" property="timestamp" />
    <result column="isconsume" jdbcType="INTEGER" property="isconsume" />
    <result column="usertype" jdbcType="INTEGER" property="usertype" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, userid, name, remark, isback, isvalid, createtime, createuser, courseid, 
    paytype, updatetime, updateuser, timestamp, isconsume, usertype
  </sql>
  <select id="selectByExample" parameterType="com.cn.course.bill.BillExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bill
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bill
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cn.course.bill.BillExample">
    delete from bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cn.course.bill.Bill">
    insert into bill (id, code, userid, 
      name, remark, isback, 
      isvalid, createtime, createuser, 
      courseid, paytype, updatetime, 
      updateuser, timestamp, isconsume, 
      usertype)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{isback,jdbcType=INTEGER}, 
      #{isvalid,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{createuser,jdbcType=INTEGER}, 
      #{courseid,jdbcType=INTEGER}, #{paytype,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{updateuser,jdbcType=INTEGER}, #{timestamp,jdbcType=VARCHAR}, #{isconsume,jdbcType=INTEGER}, 
      #{usertype,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.course.bill.Bill">
    insert into bill
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="isback != null">
        isback,
      </if>
      <if test="isvalid != null">
        isvalid,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="createuser != null">
        createuser,
      </if>
      <if test="courseid != null">
        courseid,
      </if>
      <if test="paytype != null">
        paytype,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="updateuser != null">
        updateuser,
      </if>
      <if test="timestamp != null">
        timestamp,
      </if>
      <if test="isconsume != null">
        isconsume,
      </if>
      <if test="usertype != null">
        usertype,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isback != null">
        #{isback,jdbcType=INTEGER},
      </if>
      <if test="isvalid != null">
        #{isvalid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null">
        #{createuser,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="paytype != null">
        #{paytype,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null">
        #{updateuser,jdbcType=INTEGER},
      </if>
      <if test="timestamp != null">
        #{timestamp,jdbcType=VARCHAR},
      </if>
      <if test="isconsume != null">
        #{isconsume,jdbcType=INTEGER},
      </if>
      <if test="usertype != null">
        #{usertype,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cn.course.bill.BillExample" resultType="java.lang.Long">
    select count(*) from bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bill
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.isback != null">
        isback = #{record.isback,jdbcType=INTEGER},
      </if>
      <if test="record.isvalid != null">
        isvalid = #{record.isvalid,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createuser != null">
        createuser = #{record.createuser,jdbcType=INTEGER},
      </if>
      <if test="record.courseid != null">
        courseid = #{record.courseid,jdbcType=INTEGER},
      </if>
      <if test="record.paytype != null">
        paytype = #{record.paytype,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateuser != null">
        updateuser = #{record.updateuser,jdbcType=INTEGER},
      </if>
      <if test="record.timestamp != null">
        timestamp = #{record.timestamp,jdbcType=VARCHAR},
      </if>
      <if test="record.isconsume != null">
        isconsume = #{record.isconsume,jdbcType=INTEGER},
      </if>
      <if test="record.usertype != null">
        usertype = #{record.usertype,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bill
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      isback = #{record.isback,jdbcType=INTEGER},
      isvalid = #{record.isvalid,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      createuser = #{record.createuser,jdbcType=INTEGER},
      courseid = #{record.courseid,jdbcType=INTEGER},
      paytype = #{record.paytype,jdbcType=INTEGER},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      updateuser = #{record.updateuser,jdbcType=INTEGER},
      timestamp = #{record.timestamp,jdbcType=VARCHAR},
      isconsume = #{record.isconsume,jdbcType=INTEGER},
      usertype = #{record.usertype,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.course.bill.Bill">
    update bill
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isback != null">
        isback = #{isback,jdbcType=INTEGER},
      </if>
      <if test="isvalid != null">
        isvalid = #{isvalid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null">
        createuser = #{createuser,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        courseid = #{courseid,jdbcType=INTEGER},
      </if>
      <if test="paytype != null">
        paytype = #{paytype,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null">
        updateuser = #{updateuser,jdbcType=INTEGER},
      </if>
      <if test="timestamp != null">
        timestamp = #{timestamp,jdbcType=VARCHAR},
      </if>
      <if test="isconsume != null">
        isconsume = #{isconsume,jdbcType=INTEGER},
      </if>
      <if test="usertype != null">
        usertype = #{usertype,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.course.bill.Bill">
    update bill
    set code = #{code,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      isback = #{isback,jdbcType=INTEGER},
      isvalid = #{isvalid,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      createuser = #{createuser,jdbcType=INTEGER},
      courseid = #{courseid,jdbcType=INTEGER},
      paytype = #{paytype,jdbcType=INTEGER},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      updateuser = #{updateuser,jdbcType=INTEGER},
      timestamp = #{timestamp,jdbcType=VARCHAR},
      isconsume = #{isconsume,jdbcType=INTEGER},
      usertype = #{usertype,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>