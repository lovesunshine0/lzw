<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cn.course.studentfolloworganization.dao.StudentFollowOrganizationMapper">
  <resultMap id="BaseResultMap" type="com.cn.course.studentfolloworganization.StudentFollowOrganization">
    <result column="studentid" jdbcType="INTEGER" property="studentid" />
    <result column="organizationid" jdbcType="INTEGER" property="organizationid" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="follow" jdbcType="INTEGER" property="follow" />
    <result column="timestamp" jdbcType="VARCHAR" property="timestamp" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    studentid, organizationid, remark, comment, score, follow, timestamp
  </sql>
  <select id="selectByExample" parameterType="com.cn.course.studentfolloworganization.StudentFollowOrganizationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from studentfolloworganization
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.cn.course.studentfolloworganization.StudentFollowOrganizationExample">
    delete from studentfolloworganization
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cn.course.studentfolloworganization.StudentFollowOrganization">
    insert into studentfolloworganization (studentid, organizationid, remark, 
      comment, score, follow, 
      timestamp)
    values (#{studentid,jdbcType=INTEGER}, #{organizationid,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{comment,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER}, #{follow,jdbcType=INTEGER}, 
      #{timestamp,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.course.studentfolloworganization.StudentFollowOrganization">
    insert into studentfolloworganization
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentid != null">
        studentid,
      </if>
      <if test="organizationid != null">
        organizationid,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="follow != null">
        follow,
      </if>
      <if test="timestamp != null">
        timestamp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentid != null">
        #{studentid,jdbcType=INTEGER},
      </if>
      <if test="organizationid != null">
        #{organizationid,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="follow != null">
        #{follow,jdbcType=INTEGER},
      </if>
      <if test="timestamp != null">
        #{timestamp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cn.course.studentfolloworganization.StudentFollowOrganizationExample" resultType="java.lang.Long">
    select count(*) from studentfolloworganization
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update studentfolloworganization
    <set>
      <if test="record.studentid != null">
        studentid = #{record.studentid,jdbcType=INTEGER},
      </if>
      <if test="record.organizationid != null">
        organizationid = #{record.organizationid,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.follow != null">
        follow = #{record.follow,jdbcType=INTEGER},
      </if>
      <if test="record.timestamp != null">
        timestamp = #{record.timestamp,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update studentfolloworganization
    set studentid = #{record.studentid,jdbcType=INTEGER},
      organizationid = #{record.organizationid,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER},
      follow = #{record.follow,jdbcType=INTEGER},
      timestamp = #{record.timestamp,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>